{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "fileTypes": ["rsx"],
    "name": "RSX",
    "patterns": [
        {
            "include": "#rust-section"
        },
        {
            "include": "#script-section"
        },
        {
            "include": "#template-section"
        },
        {
            "include": "#style-section"
        },
        {
            "include": "#comments"
        }
    ],
    "repository": {
        "attribute-values": {
            "patterns": [
                {
                    "begin": "\"",
                    "end": "\"",
                    "name": "string.quoted.double.html",
                    "patterns": [
                        {
                            "include": "#handlebars-variables"
                        }
                    ]
                },
                {
                    "begin": "'",
                    "end": "'",
                    "name": "string.quoted.single.html",
                    "patterns": [
                        {
                            "include": "#handlebars-variables"
                        }
                    ]
                },
                {
                    "match": "[^\\s/>]+",
                    "name": "string.unquoted.html"
                }
            ]
        },
        "client-attribute": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.html"
                        },
                        "2": {
                            "name": "punctuation.separator.key-value.html"
                        },
                        "4": {
                            "name": "string.quoted.html support.constant.client-type.rsx"
                        }
                    },
                    "match": "\\b(client)\\s*(=)\\s*([\"'])(react|vue|svelte)\\3",
                    "name": "meta.attribute.client.html.rsx"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "match": "//.*$",
                    "name": "comment.line.double-slash.rsx"
                },
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.rsx"
                }
            ]
        },
        "handlebars-block-helpers": {
            "patterns": [
                {
                    "begin": "(\\{\\{)(#if)\\s+([^}]+)(\\}\\})",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.block.begin.handlebars"
                        },
                        "2": {
                            "name": "keyword.control.conditional.handlebars"
                        },
                        "3": {
                            "patterns": [
                                {
                                    "include": "#handlebars-expression-content"
                                }
                            ]
                        },
                        "4": {
                            "name": "punctuation.definition.block.begin.handlebars"
                        }
                    },
                    "end": "(\\{\\{)(/if)(\\}\\})",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.block.end.handlebars"
                        },
                        "2": {
                            "name": "keyword.control.conditional.handlebars"
                        },
                        "3": {
                            "name": "punctuation.definition.block.end.handlebars"
                        }
                    },
                    "name": "meta.block.if.handlebars.rsx",
                    "patterns": [
                        {
                            "include": "#handlebars-else"
                        },
                        {
                            "include": "#handlebars-template"
                        }
                    ]
                },
                {
                    "begin": "(\\{\\{)(#each)\\s+([^}]+?)(\\s+as\\s+([^,}]+)(?:,\\s*([^}]+))?)?(\\}\\})",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.block.begin.handlebars"
                        },
                        "2": {
                            "name": "keyword.control.loop.handlebars"
                        },
                        "3": {
                            "name": "variable.other.handlebars"
                        },
                        "4": {
                            "name": "keyword.operator.as.handlebars"
                        },
                        "5": {
                            "name": "variable.parameter.handlebars"
                        },
                        "6": {
                            "name": "variable.parameter.handlebars"
                        },
                        "7": {
                            "name": "punctuation.definition.block.begin.handlebars"
                        }
                    },
                    "end": "(\\{\\{)(/each)(\\}\\})",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.block.end.handlebars"
                        },
                        "2": {
                            "name": "keyword.control.loop.handlebars"
                        },
                        "3": {
                            "name": "punctuation.definition.block.end.handlebars"
                        }
                    },
                    "name": "meta.block.each.handlebars.rsx",
                    "patterns": [
                        {
                            "include": "#handlebars-template"
                        }
                    ]
                }
            ]
        },
        "handlebars-comments": {
            "patterns": [
                {
                    "begin": "\\{\\{!--",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.handlebars"
                        }
                    },
                    "end": "--\\}\\}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.handlebars"
                        }
                    },
                    "name": "comment.block.handlebars.rsx"
                },
                {
                    "begin": "\\{\\{!",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.handlebars"
                        }
                    },
                    "end": "\\}\\}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.handlebars"
                        }
                    },
                    "name": "comment.block.handlebars.rsx"
                }
            ]
        },
        "handlebars-else": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.block.handlebars"
                        },
                        "2": {
                            "name": "keyword.control.conditional.handlebars"
                        },
                        "3": {
                            "patterns": [
                                {
                                    "include": "#handlebars-expression-content"
                                }
                            ]
                        },
                        "4": {
                            "name": "punctuation.definition.block.handlebars"
                        }
                    },
                    "match": "(\\{\\{)(:else\\s+if)\\s+([^}]+)(\\}\\})",
                    "name": "meta.else-if.handlebars.rsx"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.block.handlebars"
                        },
                        "2": {
                            "name": "keyword.control.conditional.handlebars"
                        },
                        "3": {
                            "name": "punctuation.definition.block.handlebars"
                        }
                    },
                    "match": "(\\{\\{)(:else)(\\}\\})",
                    "name": "meta.else.handlebars.rsx"
                }
            ]
        },
        "handlebars-expression-content": {
            "patterns": [
                {
                    "match": "@html\\b",
                    "name": "keyword.other.handlebars"
                },
                {
                    "match": "(>|<|>=|<=|==|!=)",
                    "name": "keyword.operator.comparison.handlebars"
                },
                {
                    "match": "(&&|\\|\\|)",
                    "name": "keyword.operator.logical.handlebars"
                },
                {
                    "match": "\\b\\d+(\\.\\d+)?\\b",
                    "name": "constant.numeric.handlebars"
                },
                {
                    "begin": "'",
                    "end": "'",
                    "name": "string.quoted.single.handlebars"
                },
                {
                    "begin": "\"",
                    "end": "\"",
                    "name": "string.quoted.double.handlebars"
                },
                {
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_.]*\\b",
                    "name": "variable.other.handlebars"
                }
            ]
        },
        "handlebars-raw-html": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.begin.handlebars"
                        },
                        "2": {
                            "name": "keyword.other.handlebars"
                        },
                        "3": {
                            "name": "variable.other.handlebars"
                        },
                        "4": {
                            "name": "punctuation.definition.variable.end.handlebars"
                        }
                    },
                    "match": "(\\{\\{)(@html)\\s+([^}]+)(\\}\\})",
                    "name": "meta.raw-html.handlebars.rsx"
                }
            ]
        },
        "handlebars-template": {
            "patterns": [
                {
                    "include": "#handlebars-comments"
                },
                {
                    "include": "#handlebars-block-helpers"
                },
                {
                    "include": "#handlebars-variables"
                },
                {
                    "include": "#handlebars-raw-html"
                },
                {
                    "include": "#template-restricted-tags"
                },
                {
                    "include": "#html-tags"
                },
                {
                    "include": "text.html.basic"
                }
            ]
        },
        "template-restricted-tags": {
            "patterns": [
                {
                    "name": "invalid.illegal.tag.template.rsx",
                    "match": "</?\\s*(template|script|style)\\b[^>]*>",
                    "captures": {
                        "1": {
                            "name": "invalid.illegal.tag-name.template.rsx"
                        }
                    }
                }
            ]
        },
        "handlebars-variables": {
            "patterns": [
                {
                    "begin": "\\{\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.variable.begin.handlebars"
                        }
                    },
                    "end": "\\}\\}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.variable.end.handlebars"
                        }
                    },
                    "name": "meta.variable.handlebars.rsx",
                    "patterns": [
                        {
                            "include": "#handlebars-expression-content"
                        }
                    ]
                }
            ]
        },
        "html-attributes": {
            "patterns": [
                {
                    "begin": "\\b([a-zA-Z0-9-]+)\\s*(=)\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "entity.other.attribute-name.html"
                        },
                        "2": {
                            "name": "punctuation.separator.key-value.html"
                        }
                    },
                    "end": "(?=[\\s/>])",
                    "name": "meta.attribute.html",
                    "patterns": [
                        {
                            "include": "#attribute-values"
                        }
                    ]
                },
                {
                    "match": "\\b[a-zA-Z0-9-]+\\b",
                    "name": "entity.other.attribute-name.html"
                }
            ]
        },
        "html-tags": {
            "patterns": [
                {
                    "begin": "(<)([A-Z][a-zA-Z0-9]*)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.begin.html"
                        },
                        "2": {
                            "name": "entity.name.tag.component.html"
                        }
                    },
                    "end": "(/?>)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.end.html"
                        }
                    },
                    "name": "meta.tag.client-component.html.rsx",
                    "patterns": [
                        {
                            "include": "#client-attribute"
                        },
                        {
                            "include": "#html-attributes"
                        }
                    ]
                },
                {
                    "begin": "(<)([a-z][a-zA-Z0-9-]*)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.begin.html"
                        },
                        "2": {
                            "name": "entity.name.tag.html"
                        }
                    },
                    "end": "(/?>)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.tag.end.html"
                        }
                    },
                    "name": "meta.tag.html",
                    "patterns": [
                        {
                            "include": "#html-attributes"
                        }
                    ]
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.tag.begin.html"
                        },
                        "2": {
                            "name": "entity.name.tag.html"
                        },
                        "3": {
                            "name": "punctuation.definition.tag.end.html"
                        }
                    },
                    "match": "(</)([a-zA-Z0-9-]+)(>)",
                    "name": "meta.tag.html"
                }
            ]
        },
        "rust-section": {
            "begin": "^---\\s*$",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.rust-section.begin.rsx"
                }
            },
            "contentName": "source.rust.embedded.rsx",
            "end": "^---\\s*$",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.rust-section.end.rsx"
                }
            },
            "name": "meta.embedded.block.rust.rsx",
            "patterns": [
                {
                    "include": "#rust-server-functions"
                },
                {
                    "include": "source.rust"
                }
            ]
        },
        "rust-server-functions": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "storage.modifier.async.rust keyword.other.fn.rust"
                        },
                        "2": {
                            "name": "entity.name.function.server-side-props.rust.rsx"
                        }
                    },
                    "match": "\\b(async\\s+fn\\s+)(get_server_side_props)\\s*\\(",
                    "name": "meta.function.server-side-props.rust.rsx"
                }
            ]
        },
        "script-section": {
            "begin": "(<)(script)((?:\\s[^>]*)?)(>)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.script.rsx support.type.builtin.rsx"
                },
                "3": {
                    "patterns": [
                        {
                            "include": "text.html.basic#attribute"
                        }
                    ]
                },
                "4": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "contentName": "source.ts.embedded.rsx",
            "end": "(</)(script)(>)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.script.rsx support.type.builtin.rsx"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "name": "meta.embedded.block.typescript.rsx",
            "patterns": [
                {
                    "include": "#typescript-define-props"
                },
                {
                    "include": "source.ts"
                }
            ]
        },
        "style-section": {
            "begin": "(<)(style)((?:\\s[^>]*)?)(>)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.style.rsx support.type.builtin.rsx"
                },
                "3": {
                    "patterns": [
                        {
                            "include": "text.html.basic#attribute"
                        }
                    ]
                },
                "4": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "contentName": "source.scss.embedded.rsx",
            "end": "(</)(style)(>)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.style.rsx support.type.builtin.rsx"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "name": "meta.embedded.block.scss.rsx",
            "patterns": [
                {
                    "include": "source.scss"
                }
            ]
        },
        "template-section": {
            "begin": "(<)(template)((?:\\s[^>]*)?)(>)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.template.rsx support.type.builtin.rsx"
                },
                "3": {
                    "patterns": [
                        {
                            "include": "text.html.basic#attribute"
                        }
                    ]
                },
                "4": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "contentName": "text.html.handlebars.embedded.rsx",
            "end": "(</)(template)(>)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                    "name": "entity.name.tag.template.rsx support.type.builtin.rsx"
                },
                "3": {
                    "name": "punctuation.definition.tag.end.html"
                }
            },
            "name": "meta.embedded.block.handlebars.rsx",
            "patterns": [
                {
                    "include": "#handlebars-template"
                }
            ]
        },
        "typescript-define-props": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "entity.name.function.define-props.typescript.rsx"
                        },
                        "2": {
                            "name": "meta.type-parameters.typescript"
                        }
                    },
                    "match": "\\b(defineProps)(<[^>]*>)?\\s*\\(",
                    "name": "meta.function.define-props.typescript.rsx"
                }
            ]
        }
    },
    "scopeName": "source.rsx"
}
